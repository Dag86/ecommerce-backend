# This workflow will install Playwright browsers and run tests using Playwright on push and pull request events to the main branch. 

# It uses the latest version of Node.js and runs on the latest Ubuntu environment.
# The workflow checks out the repository, sets up Node.js, installs dependencies, installs Playwright browsers, and finally runs the tests.

# The working directory for the tests is set to 'ecommerce-tests', which should be the directory where your Playwright tests are located. 

# Make sure to adjust the working directory if your tests are located elsewhere.
# You can also customize the Node.js version if needed. 

# This workflow is triggered on push and pull request events to the main branch.
# You can modify the branches as per your requirements.

# The workflow uses the latest version of the actions/checkout and actions/setup-node actions.
# The workflow is defined in YAML format and is compatible with GitHub Actions.

# The workflow is named "Playwright Tests" and is defined in the .github/workflows directory of your repository.

# The workflow is triggered on push and pull request events to the main branch.
# The workflow consists of a single job named "test" that runs on the latest Ubuntu environment.
# The job has several steps, including checking out the repository, setting up Node.js, installing dependencies, installing Playwright browsers, and running the tests. 

# The working directory for the tests is set to 'ecommerce-tests', which should be the directory where your Playwright tests are located.
# Make sure to adjust the working directory if your tests are located elsewhere.


name: Playwright Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ecommerce-tests

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Verify working directory exists
        run: if [ ! -d "ecommerce-tests" ]; then echo "Directory 'ecommerce-tests' does not exist."; exit 1; fi

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run tests
        run: npx playwright test --config=playwright.config.ts

      - name: Upload Playwright HTML Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: ecommerce-tests/playwright-report
